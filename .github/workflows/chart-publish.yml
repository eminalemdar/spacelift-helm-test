name: Preprod chart publish

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-chart-publish-preprod

jobs:
  registry:
    name: Publish the chart to the preprod Helm repository
    runs-on: ubuntu-latest
    env:
      HELM_VERSION: "3.7.1"
      REGISTRY_URL: "s3://test-helm-bucket/helm"
      CHART_VERSION_PREFIX: "0.0.4-preprod"
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@master

      - name: Install Helm
        run: |
          curl -s https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz -o helm-v${HELM_VERSION}-linux-amd64.tar.gz
          tar -zxf helm-v${HELM_VERSION}-linux-amd64.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin
          rm helm-v${HELM_VERSION}-linux-amd64.tar.gz
          rm -rf linux-amd64

      - name: Install Helm S3 Plugin
        run: helm plugin install https://github.com/hypnoglow/helm-s3.git

      - name: Create output directory for chart1
        run: mkdir -p build/chart/chart1

      - name: Create output directory for chart2
        run: mkdir -p build/chart/chart2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download existing index.yaml
        run: helm repo add spacelift-test ${REGISTRY_URL}
        # The first time this step runs the index file won't exist, so allow the step to fail
        continue-on-error: true

      - name: Set chart version number
        run: |
          timestamp=$(date +'%s')
          echo "CHART_VERSION=${CHART_VERSION_PREFIX}.${timestamp}" >> $GITHUB_ENV

      - name: Lint chart1
        run: helm lint chart1/

      - name: Lint chart2
        run: helm lint chart2/

      - name: Package chart1
        run: |
          helm package --version "$CHART_VERSION" --destination build/chart/chart1 chart1/
          helm s3 push build/chart/chart1/spacelift-test-${CHART_VERSION}.tgz spacelift-test

      - name: Package chart2
        run: |
          helm package --version "$CHART_VERSION" --destination build/chart/chart2 chart2/
          helm s3 push build/chart/chart2-${CHART_VERSION}.tgz spacelift-test2

      #- name: Upload the chart to S3
      #  run: >-
      #    aws s3 sync
      #    build/chart s3://${{ secrets.AWS_S3_BUCKET }}/helm
      #    --no-progress

      #- name: Invalidate cache
      #  run: >-
      #    aws cloudfront create-invalidation
      #    --distribution-id ${{ secrets.PREPROD_DISTRIBUTION }}
      #    --paths "/helm/*"